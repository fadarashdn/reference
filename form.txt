options?.extraProps?.needTimeConfirm),hdc=(sd)=>{[sds,tds]=[sd?.format("YYYY/MM/DD"),dayjs()?.format("YYYY/MM/DD")],its=sds===tds;if(!sd){hoc(null);return}let ndt:Dayjs;if(stn&&its){ts=v||dayjs();ndt=ts.year(sd.year()).month(sd.month()).date(sd.date())}else if(ste){ndt=sd.endOf("day")}else{ndt=sd.startOf("day")}hoc(ndt)},htc=(st)=>{if(!st){v?(dorwt=v.startOf("day"),hoc(dorwt)):hoc(null);return}bdt=v||dayjs().startOf("day"),ndt=bdt.hour(st.hour()).minute(st.minute()).second(st.second()),hoc(ndt)},mdwr=Form.useWatch([options?.extraProps?.minDate],form),mxdwr=Form.useWatch([options?.extraProps?.maxDate],form),mdwv=isString(mdwr)?parseJalaliString(mdwr):mdwr?.isJalali()?mdwr:undefined,mxdwv=isString(mxdwr)?parseJalaliString(mxdwr):mxdwr?.isJalali()?mxdwr:undefined;return<Flex align="center" justify="space-between" gap="middle" id={`${id}-datetime-picker`}><DatePicker minDate={mdwv} maxDate={mxdwv} readOnly={options?.readOnly} disabled={options?.disabled as boolean} hidden={options?.hidden as boolean} style={{width:"50%"}} name={`${name}-date`} value={v} onChange={hdc} format={options?.extraProps?.displayFormat??"YYYY/MM/DD"} needConfirm={ndc} placeholder={options?.extraProps?.datePlaceholder} locale={{...faIR,lang:{...faIR.lang,ok:m(generalMessages.confirm)}}}/><DatePicker.TimePicker readOnly={options?.readOnly} disabled={options?.disabled as boolean} hidden={options?.hidden as boolean} style={{width:"50%"}} name={`${name}-time`} value={v} onChange={htc} needConfirm={ntc} placeholder={options?.extraProps?.timePlaceholder} locale={{...faIR,lang:{...faIR.lang,ok:m(generalMessages.confirm)}}}/>}</Flex>}
DynamicListField:({id,onChange,options,value})=>{[imo,simo]=useState(false),m=getFormatMessage(),{addButtonLabel=m(generalMessages.actionAddition),formTitle=m(generalMessages.actionAddItem),fields=[],notShowingFields}=options?.extraProps||{},cr=useRef(0),i=useMemo(()=>{ci=Array.isArray(value)?value:[];return ci.map((it)=>{if(it.id)return it;cr.current+=1;return{...it,id:`id-${cr.current}`}})},[value]),gi=():string=>{cr.current+=1;return`item-${cr.current}`},oom=(fni:FormFields):void=>{ni={...fni,id:gi()},onChange?.([...i,ni]),simo(false)},hri=(iid:string):void=>{fi=i.filter((it)=>it.id!==iid),onChange?.(fi)},vf=fields.filter((f)=>!notShowingFields?.includes(f.name as string));return<div className={styles.container} id={id}><Space direction="vertical" size="middle" className={styles.mainSpace}>{!options?.readOnly&&<Button type="primary" icon={<PlusOutlined/>} onClick={()=>simo(true)} className={styles.addButton} disabled={options?.disabled}>{addButtonLabel}</Button>}{i.length>0&&<Space direction="vertical" size="small" className={styles.itemsList}>{i.map((it)=><Card key={it.id} size="small" className={styles.itemCard}><Flex justify="space-between" align="flex-start"><Flex gap="small" align="flex-start" style={{flex:1}}><Space direction="vertical" size="small" style={{flex:1}}>{vf.map((f,idx)=><div key={`${String(f.name)}-${idx}`} className={styles.fieldRow}><Text className={styles.fieldLabel}>{f.label}:</Text><Text className={styles.fieldValue}>{it[f.name]||"--"}</Text></div>)}</Space></Flex>{!options?.readOnly&&<Button type="text" size="small" icon={<CloseOutlined/>} onClick={()=>hri(it.id)} className={styles.removeButton}/>}</Flex></Card>)}</Space>}<Modal footer={null} title={formTitle} open={imo} onCancel={()=>simo(false)} width={400} destroyOnClose={true} zIndex={1000}><Space direction="vertical" size="middle" className={styles.modalForm}><FormGenerator id={id} fields={fields} onSubmit={oom} reset={true} resetLabel={m(generalMessages.cancel)}/></Space></Modal></div>}
CopyableField:(p)=>{const{value,id,name}=p,dv=(value as string)||"",hc=()=>{ttc=dv.toString();navigator.clipboard.writeText(ttc)};return<Input id={id} value={dv} readOnly disabled={true} addonAfter={null} name={name} suffix={<Button type="text" icon={<CopyOutlined/>} onClick={hc} style={{margin:"-1px -7px",height:"22px",width:"22px",padding:0,display:"flex",alignItems:"center",justifyContent:"center"}}/>}/>}
AmountField:({form:_,...p})=>{m=getFormatMessage(),sep=p?.options?.extraProps?.separator??",",ntv=isNumber(p.value)?p.value.toString():(p.value as string)||"",rv=ntv.trim(),fv=useMemo(()=>addCommaToAmount(rv,3,true,rv.includes("."),sep),[rv,sep]),tt=useMemo(()=>{ip=rv.split(".")[0];return wordifyfa(Number(ip))},[rv]),inp=useMemo(()=>{hc=(e)=>{rx=new RegExp(sep,"g"),i=e.target.value?.replace(rx,"");p?.onChange?.(i)};return<Input name={p.name} id={p.id} readOnly={p.options?.readOnly} disabled={!!p.options?.disabled} hidden={!!p.options?.hidden} value={fv} onChange={hc} addonAfter={p.value?(p?.options?.extraProps?.addonAfter??m(generalMessages.rial)):undefined} dir="ltr" style={{textAlign:"right"}} placeholder={p?.options?.extraProps?.placeholder||""} className={`${p.options?.readOnly?"brdp-field-amount brdp-field-amount--readonly":"brdp-field-amount"}`}/>},[fv,p,sep]);if(p.options?.extraProps?.toWordify===true){<Tooltip title={tt} placement="topLeft">{inp}</Tooltip>}return isNaN(rv as unknown as number)?"-":inp}
ButtonField:({options})=>{const{label,icon,position={},disabled,...bp}=options?.extraProps??{};if(!icon&&!label){throw new Error("ButtonField: Either 'icon' or 'label' prop must be provided.")}return<Flex align={position?.y??"flex-start"} justify={position?.x??"flex-start"}><Button label={label} icon={icon} disabled={disabled??false} {...bp}/></Flex>}
CollapseField:({options,form,value,name})=>{value&&typeof value!=="boolean"&&console.warn(`[FormField Warning] CollapseField [name: ${name}]: expects "boolean"`);f=validateFields(options),t=options?.extraProps?.type==="collapsible"?"collapsible":"groupable",{label,disabled,readOnly}=options??{},cbl:CollapsibleType=t==="groupable"?"disabled":"header",cl=options?.extraProps?.appearance?.collapsedLabel,wrb=options?.extraProps?.appearance?.withRightBorder??true,k=useId(),vr=options?.extraProps?.appearance?.variant,or=options?.extraProps?.appearance?.orientation,[cps,scps]=useState(()=>(value===false?undefined:[k])),ci=[{key:k,label:CollapseLabel({icon:or==="center"?(cps?.includes(k)?<PlusIcon/>:<MinusIcon/>):null,label:cps?.includes(k)&&cl?cl:label?label:"",variant:vr,orientation:or}),forceRender:true,collapsible:cbl,children:<FormFieldsRow form={form} gutter={wrb?[58,16]:[16,16]} fields={f} readOnly={readOnly} disabled={disabled} withBorder={wrb}/>}]satisfies CollapseProps["items"];return<Collapse items={ci} defaultActiveKey={cps} ghost onChange={(d)=>{scps(d)}} rootClassName={clsx({"brdp-collapse-collapsible brdp-collapse--type-groupable":t==="groupable","brdp-collapse-collapsible":t==="collapsible","brdp-collapse--no-label":!options?.label})} expandIcon={({isActive})=>{if(t==="groupable"||or==="center")return null;return isActive?<PlusIcon/>:<MinusIcon/>}}/>}
}
ELEMENT_EXTRA_TYPES:type CultureValuesType={culture:string|undefined,value:string};type CulturesType={label:string,value:string};type Extensions=keyof typeof mimeTypes;type UploadFile=RcFile|File;type FileUploaderExtraProps={accept:Extensions[],disabled?:boolean};type FileParserExtraProps={accept:Extensions[],disabled?:boolean,parser?:"json"|"byteArray",sizeLimit?:number,sizeLimitValidationMessage?:string};type DatePickerFieldExtraProps={displayFormat?:string,minDate?:string|Dayjs,maxDate?:string|Dayjs};type DateTimePickerExtraProps={setTimeToNow?:boolean,setTimeToEnd?:boolean,needDateConfirm?:boolean,needTimeConfirm?:boolean,displayFormat?:"YYYY-MM-DD"|"YYYY/MM/DD",minDate?:string|Dayjs,maxDate?:string|Dayjs,datePlaceholder?:string,timePlaceholder?:string};type AddItemListExtraProps={addButtonLabel?:string,formTitle?:string,notShowingFields?:string[],fields?:FormField<FormFields>[]};type AmountFieldExtraProps={placeholder?:string,separator?:string,addonAfter?:string,toWordify?:boolean};type ButtonFieldExtraProps=ComponentProps<typeof Button>&{position?:{y?:FlexProps["align"],x?:FlexProps["justify"]}};type CollapseFieldExtraProps<SubFieldsTypes=unknown>={type?:"collapsible"|"groupable",appearance?:{collapsedLabel?:string,variant?:"dashed"|"dotted"|"solid",orientation?:"center"|"start",withRightBorder?:boolean},fields:FormField<SubFieldsTypes>[]}
UTILITIES:{
formatIban=(v)=>{p=[v?.slice(0,2),v?.slice(2,6),v?.slice(6,10),v?.slice(10,14),v?.slice(14,18),v?.slice(18,24)]?.filter(Boolean);return p.join("-")};extractDigits=(i="")=>i?.replace(/^IR/i,"")?.replace(/[^0-9]/g,"")?.slice(0,24);mimeTypes={".jpg":"image/jpeg",".jpeg":"image/jpeg",".png":"image/png",".webp":"image/webp",".gif":"image/gif",".svg":"image/svg+xml",".pdf":"application/pdf",".txt":"text/plain",".text":"text/plain",".json":"application/json",".csv":"text/csv",".xls":"application/vnd.ms-excel",".xlsx":"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",".doc":"application/msword",".docx":"application/vnd.openxmlformats-officedocument.wordprocessingml.document",".ppt":"application/vnd.ms-powerpoint",".pptx":"application/vnd.openxmlformats-officedocument.presentationml.presentation",".zip":"application/zip"}as const;checkPropsExist=(p)=>{const{accept}=p??{};if(!accept||!Array.isArray(accept)||accept.length===0||!accept.every((i)=>mimeTypes[i])){throw new Error("Prop `accept` is required but was not provided or is invalid.")}return p as ExtraProps};getFileExtension=(fn)=>{m=/\.([0-9a-z]+)$/i.exec(fn);return m&&m[0]?(m[0].toLowerCase().trim()as Extensions):undefined};checkIsValidFile=(f,a)=>{m=getFormatMessage();if(!f)throw new Error(m(generalMessages.notSentAnyFileValidation));e=getFileExtension(f.name);if(!e)throw new Error(m(generalMessages.notExtFileValidation));me=a.find((i)=>i.toLowerCase().trim()===e);if(!me)throw new Error(m(generalMessages.extFileValidation));fmt=f.type.toLowerCase().trim();if(fmt!==mimeTypes[me])throw new Error(m(generalMessages.notValidFileValidation))};checkSizeLimit=({file,sizeLimit,sizeLimitValidationMessage})=>{if(file&&file.size>sizeLimit){throw new Error(sizeLimitValidationMessage)}};parseJsonFile=(f)=>new Promise((res,rej)=>{r=new FileReader();r.onload=(e)=>{try{t=(e.target?.result as string)?.trim();!t&&(rej(new Error(m(generalMessages.emptyFileValidation))),return);jo=JSON.parse(t);(!jo||Object.keys(jo).length===0)&&(rej(new Error(m(generalMessages.emptyFileValidation))),return);typeof jo==="object"&&jo!==null?res(jo):rej(new Error(m(generalMessages.notValidJsonFileValidation)))}catch{rej(new Error(m(generalMessages.notValidFileValidation)))}};r.onerror=()=>rej(new Error(m(generalMessages.readFileError)));r.readAsText(f)});convertToByteArray=(f)=>new Promise((res,rej)=>{r=new FileReader();r.onload=(e)=>{e.target?.result?(ab=e.target.result as ArrayBuffer,ba=new Uint8Array(ab),res(ba)):rej(new Error(m(generalMessages.readFileError)))};r.onerror=()=>rej(new Error(m(generalMessages.readFileError)));r.readAsArrayBuffer(f)});addCommaToAmount=(v,gs=3,rtz=true,hd=false,s=",")=>{if(!v)return"";p=v.toString().split(".");ip=p[0].replace(/\B(?=(\d{3})+(?!\d))/g,s);dp=p[1];if(hd&&dp){return rtz?`${ip}.${dp.replace(/0+$/,"")}`.replace(/\.$/,""):`${ip}.${dp}`}return ip};wordifyfa=(n)=>{/*persian number to words implementation*/};validateFields=(o)=>{if(!o?.extraProps){throw new Error('CollapseField: "options.extraProps" is required.')}f=o.extraProps.fields;if(!f){throw new Error('CollapseField: "fields" is required.')}if(!Array.isArray(f)){throw new Error('CollapseField: "fields" must be a array.')}return f};MinusIcon=()=><svg width="14" height="15" viewBox="0 0 14 15" fill="none" xmlns="http://www.w3.org/2000/svg" className="brdp-collapse-icon"><path d="M2.42507 14.5C1.62735 14.5 1.02374 14.3005 0.614245 13.9014C0.204748 13.5023 0 12.9036 0 12.1055V2.90251C0 2.10433 0.204748 1.5057 0.614245 1.10661C1.02374 0.702204 1.62735 0.5 2.42507 0.5H11.5749C12.378 0.5 12.9816 0.702204 13.3858 1.10661C13.7953 1.51102 14 2.10965 14 2.90251V12.1055C14 12.8983 13.7953 13.4943 13.3858 13.8934C12.9816 14.2978 12.378 14.5 11.5749 14.5H2.42507ZM2.48091 13.1511H11.5191C11.8754 13.1511 12.1519 13.0553 12.3487 12.8637C12.5455 12.6722 12.6439 12.3875 12.6439 12.0097V2.99829C12.6439 2.62049 12.5455 2.3358 12.3487 2.14424C12.1519 1.95268 11.8754 1.8569 11.5191 1.8569H2.48091C2.11928 1.8569 1.84274 1.95268 1.65128 2.14424C1.45983 2.3358 1.3641 2.62049 1.3641 2.99829V12.0097C1.3641 12.3875 1.45983 12.6722 1.65128 12.8637C1.84274 13.0553 2.11928 13.1511 2.48091 13.1511ZM3.50997 7.49202C3.50997 7.28981 3.57379 7.12486 3.70142 6.99715C3.82906 6.86944 3.99126 6.80559 4.18803 6.80559H6.32593V4.66648C6.32593 4.46427 6.38708 4.30198 6.5094 4.17959C6.63704 4.05188 6.79658 3.98803 6.98803 3.98803C7.19012 3.98803 7.35499 4.05188 7.48262 4.17959C7.61026 4.30198 7.67407 4.46427 7.67407 4.66648V6.80559H9.81994C10.0167 6.80559 10.1789 6.86944 10.3066 6.99715C10.4342 7.12486 10.498 7.28981 10.498 7.49202C10.498 7.68358 10.4342 7.84322 10.3066 7.97092C10.1789 8.09331 10.0167 8.1545 9.81994 8.1545H7.67407V10.3016C7.67407 10.5038 7.61026 10.6661 7.48262 10.7885C7.35499 10.9109 7.19012 10.9721 6.98803 10.9721C6.79658 10.9721 6.63704 10.9109 6.5094 10.7885C6.38708 10.6608 6.32593 10.4985 6.32593 10.3016V8.1545H4.18803C3.99126 8.1545 3.82906 8.09331 3.70142 7.97092C3.57379 7.84322 3.50997 7.68358 3.50997 7.49202Z" fill="var(--ant-color-text)"/></svg>;PlusIcon=()=><svg width="14" height="15" viewBox="0 0 14 15" fill="none" xmlns="http://www.w3.org/2000/svg" className="brdp-collapse-icon"><path d="M2.42507 14.5C1.62735 14.5 1.02374 14.3005 0.614245 13.9014C0.204748 13.5023 0 12.9036 0 12.1055V2.90251C0 2.10433 0.204748 1.5057 0.614245 1.10661C1.02374 0.702204 1.62735 0.5 2.42507 0.5H11.5749C12.378 0.5 12.9816 0.702204 13.3858 1.10661C13.7953 1.51102 14 2.10965 14 2.90251V12.1055C14 12.8983 13.7953 13.4943 13.3858 13.8934C12.9816 14.2978 12.378 14.5 11.5749 14.5H2.42507ZM2.48091 13.1511H11.5191C11.8754 13.1511 12.1519 13.0553 12.3487 12.8637C12.5455 12.6722 12.6439 12.3875 12.6439 12.0097V2.99829C12.6439 2.62049 12.5455 2.3358 12.3487 2.14424C12.1519 1.95268 11.8754 1.8569 11.5191 1.8569H2.48091C2.11928 1.8569 1.84274 1.95268 1.65128 2.14424C1.45983 2.3358 1.3641 2.62049 1.3641 2.99829V12.0097C1.3641 12.3875 1.45983 12.6722 1.65128 12.8637C1.84274 13.0553 2.11928 13.1511 2.48091 13.1511ZM4.10826 8.17047C3.8849 8.17047 3.70142 8.1146 3.55783 8.00285C3.41956 7.88579 3.35043 7.72083 3.35043 7.50798C3.35043 7.29514 3.4169 7.13018 3.54986 7.01311C3.68813 6.89073 3.87426 6.82953 4.10826 6.82953H9.91567C10.1443 6.82953 10.3252 6.89073 10.4581 7.01311C10.5911 7.13018 10.6575 7.29514 10.6575 7.50798C10.6575 7.72083 10.5884 7.88579 10.4501 8.00285C10.3119 8.1146 10.1337 8.17047 9.91567 8.17047H4.10826Z" fill="var(--ant-color-text)"/></svg>;CollapseLabel=({icon,label,variant,orientation}:{icon?:React.ReactNode,label:string,variant?:"dashed"|"dotted"|"solid",orientation?:"center"|"start"})=><Divider variant={variant} orientation={orientation==="center"?"center":"left"} orientationMargin={0} className="brdp-collapse-label" plain><Flex gap={8} align="center" justify="center">{icon}{label}</Flex></Divider>
}
VALIDATORS:{requiredGroupValidator=(g,f,e)=>Promise<void>;emailValidator=(r,v)=>v&&!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(v)?Promise.reject("Invalid email"):Promise.resolve();ibanValidator=(r,v)=>v&&!/^IR\d{24}$/.test(v)?Promise.reject("Invalid IBAN"):Promise.resolve();mobileValidator=(r,v)=>v&&!/^09\d{9}$/.test(v)?Promise.reject("Invalid mobile"):Promise.resolve()}
HOOKS:{useFormPersistence=(fi,f)=>{useEffect(()=>{s=localStorage.getItem(`form_${fi}`);s&&f.setFieldsValue(JSON.parse(s))},[]);useEffect(()=>{const i=setInterval(()=>{localStorage.setItem(`form_${fi}`,JSON.stringify(f.getFieldsValue(true)))},5000);return()=>clearInterval(i)},[f,fi])};useFormValidation=(f,fs)=>{[e,se]=useState({});vf=(n,v)=>{fi=fs.find(fi=>fi.name===n);if(!fi?.validation?.rules)return;f.validateFields([n]).then(()=>se(p=>({...p,[n]:undefined}))).catch(er=>se(p=>({...p,[n]:er.errorFields[0].errors[0]})))};return{errors:e,validateField:vf}}}
PATTERNS:{IBAN:/^IR\d{24}$/;MOBILE:/^09\d{9}$/;EMAIL:/^[^\s@]+@[^\s@]+\.[^\s@]+$/;POSTAL_CODE:/^\d{10}$/;NATIONAL_CODE:/^\d{10}$/}
CONSTANTS:{DEFAULT_GUTTER:16;DEFAULT_SPAN:1;MAX_SPAN:4;DEFAULT_DATE_FORMAT:"YYYY/MM/DD";DEFAULT_DATETIME_FORMAT:"YYYY/MM/DD HH:mm:ss";MAX_FILE_SIZE:10*1024*1024;SUPPORTED_LOCALES:["fa","en","ar"]}
CSS:.brdp-form-wrapper .brdp-form-col-with-left-border::after{content:'';height:100%;width:var(--ant-line-width);background-color:var(--ant-color-split);position:absolute;top:0;bottom:0;left:0}.brdp-business-CollapseField{--ant-form-item-margin-bottom:0;padding-top:var(--ant-padding)}.brdp-business-CollapseField>.ant-form-item-row>.ant-form-item-label{display:none}.brdp-field-amount--readonly,.brdp-field-iban--readonly{width:fit-content}.brdp-field-amount--readonly .ant-input,.brdp-field-iban--readonly .ant-input{field-sizing:content}.brdp-form-wrapper .brdp-readonly-field .ant-input-disabled,.ant-picker-disabled,.ant-select-selector,.ant-input-number,.ant-input-css-var{--ant-color-text-disabled:var(--ant-color-text);--ant-color-bg-container-disabled:transparent;--ant-color-border:transparent;--ant-input-addon-bg:transparent;cursor:default!important}.fileParserWrapper p{margin-bottom:0!important}.separator{border:solid 1px rgba(151,151,151,0.24);margin:0 5px}.nonePointer{pointer-events:none}.errorBorder{border-color:var(--ant-color-error)}.tag-field{display:flex;align-items:center;width:max-content}.mainSpace{width:100%}.addButton{width:100%;height:var(--ant-control-height-lg);border-radius:var(--ant-border-radius)}.itemCard{border-radius:var(--ant-border-radius-sm);background-color:var(--ant-color-fill-quaternary);border:var(--ant-line-width) solid var(--ant-color-border-secondary);padding:var(--ant-padding-sm)}.removeButton{color:var(--ant-color-error);min-width:var(--ant-control-height-xs);height:var(--ant-control-height-xs);padding:0}.removeButton:hover{color:var(--ant-color-error-hover);background-color:var(--ant-color-error-bg-hover)}.fieldRow{display:flex;align-items:flex-start;gap:var(--ant-margin-xs);margin-bottom:var(--ant-margin-xs)}.fieldLabel{font-size:var(--ant-font-size-md);color:var(--ant-color-text-secondary);min-width:fit-content;font-weight:var(--ant-font-weight-strong)}.fieldValue{color:var(--ant-color-text);word-break:break-word;flex:1}.fieldValue:empty::after{content:"--";color:var(--ant-color-text-quaternary)}.brdp-form-wrapper .brdp-business-ButtonField{height:calc(100% - var(--ant-form-item-margin-bottom))}.brdp-form-wrapper .brdp-business-ButtonField .ant-form-item-row,.ant-form-item-control div{height:100%}.brdp-form-wrapper .brdp-business-ButtonField .ant-form-item-control{flex:1}.brdp-form-wrapper .brdp-business-ButtonField .ant-form-item-control-input{align-items:flex-start}
IMPORTS:@brdp/utils:{generalMessages,getFormatMessage,isFunction,isString,parseJalaliString,addCommaToAmount,wordifyfa,isNumber};@brdp/ui:{Button,Card,ActionBarBuilder};antd:{Form,FormInstance,NamePath,GetProps,Input,InputNumber,Select,Cascader,Checkbox,Radio,TreeSelect,Divider,Empty,Flex,Tooltip,Col,Row,Grid,Spin,Typography,Tag,App,Upload,Modal,Space,Collapse,CollapseProps,CollapsibleType};antd/es/upload:{RcFile};antd/es/date-picker/locale/fa_IR:{faIR};react:{React,useState,useCallback,useMemo,useEffect,useRef,useId,ComponentProps};clsx;dayjs:{dayjs,Dayjs,isDayjs};@ant-design/icons:{CloudUploadOutlined,DeleteOutlined,PlusOutlined,CloseOutlined,CopyOutlined,MinusCircleOutlined,HorizontalEllipsisIcon};../dateTime/date-picker:{DatePicker};../assets/icons:{IconsList};../tag/tag:{Tag};./business-elements/*:{ALL_BUSINESS_ELEMENTS}
EXPORTS:FormGenerator=FormBuilder as CompoundedComponent;FormGenerator.BusinessTagDemo=BusinessTagDemo;FormGenerator.FileParserField=FileParserField;FormGenerator.DatePickerField=DatePickerField;FormGenerator.DateTimePickerField=DateTimePickerField;FormGenerator.IBANField=IbanField;FormGenerator.FileUploaderField=FileUploaderField;FormGenerator.AmountField=AmountField;FormGenerator.CollapseField=CollapseField;FormGenerator.NestDynamicField=NestDynamicField;FormGenerator.ButtonField=ButtonField;FormGenerator.DynamicListField=DynamicListField;FormGenerator.TagField=TagField;FormGenerator.CopyableField=CopyableField;export{useControlledForm,FormFields,FormGenerator as default}
API_SUMMARY:{useControlledForm:hook(form-state-management),FormBuilder:component(renders-forms),FormFieldsRenderer:component(renders-individual-fields),FormFieldsRow:component(layout-manager),BusinessElements:[AmountField(persian-currency),ButtonFielFORM_SYSTEM_REF_v2.0_COMPLETE{
MODULE:@brdp/form{
HOOK:useControlledForm<T,K=NamePath<T>|IgnorablePattern>({id,disabledForm}:{id:string,disabledForm?:boolean})=>{[isDisabled,setIsDisabled]=useState(disabledForm??false),messages=getFormatMessage(),[form]=Form.useForm(),formInstance=form,ControlledForm=(p)=>React.createElement(FormBuilder<T>,{...p,disabled:isDisabled?isDisabled:p.disabled,drill:form,id}),fieldWatch=(n,o)=>Form.useWatch(n,{form,...o}),getFieldValue=(n)=>formInstance.getFieldValue(n),getFieldsValue=(n)=>formInstance.getFieldsValue(n),setFieldsValue=(s)=>formInstance.setFieldsValue(s),resetFields=(n)=>formInstance.resetFields(n),submit=()=>form.submit(),validateFields=(n)=>formInstance.validateFields(n,{dirty:true,recursive:true}),getFieldError=(n)=>formInstance.getFieldError(n),isFieldTouched=(n)=>formInstance.isFieldTouched(n),isFieldsTouched=(n,a)=>formInstance.isFieldsTouched(n,a),isFieldsValidating=(n)=>formInstance.isFieldsValidating(n),toggleFormDisable=(n)=>setIsDisabled(p=>n===undefined?!p:n),validateRequiredGroup=(g,f,e)=>new Promise((res,rej)=>{gf=f.filter(fi=>fi.requiredGroup===g),fn=gf.map(fi=>fi.name),v=formInstance.getFieldsValue(fn),has=fn.some(n=>{val=v[n];return val!==undefined&&val!==null&&(typeof val==="string"?val.trim().length>0:true)}),!has?(err=e||messages(generalMessages.requiredGroup),formInstance.setFields(fn.map(n=>({name:n,errors:[err]}))),rej(new Error(err))):(formInstance.setFields(fn.map(n=>({name:n,errors:[]}))),res())}),clearRequiredGroupErrors=(g,f)=>{gf=f.filter(fi=>fi.requiredGroup===g),fn=gf.map(fi=>fi.name),formInstance.setFields(fn.map(n=>({name:n,errors:[]})))};return{ControlledForm:useCallback(ControlledForm,[isDisabled]),fieldWatch,getFieldValue,getFieldsValue,setFieldsValue,resetFields,submit,toggleFormDisable,validateFields,getFieldError,isFieldsValidating,isFieldTouched,isFieldsTouched,validateRequiredGroup,clearRequiredGroupErrors}}
BUILDER:FormBuilder<F,H=unknown>({id,fields,initialValues,onSubmit,reset,submitLabel,onReset,resetLabel,compact,isLoading,isSubmitting,isSubmitDisabled,drill,disabled,readOnly,title,formHeaderActions,submitButtonIcon}:FormBuilderPropsType<F,H>)=>{[form]=Form.useForm<F>(drill??undefined),fieldsList=(f)=>f.flatMap(fi=>{nf=fi.type==="business"&&fi.options?.extraProps?.fields?fieldsList(fi.options.extraProps.fields):[];return[fi,...nf]}),initWithDash=useMemo(()=>{if(!initialValues)return initialValues;return Object.fromEntries(Object.entries(initialValues).map(([k,v])=>{cf=fieldsList(fields).find(f=>f?.name===k),ro=cf?.readOnly||readOnly,ea=Array.isArray(v)&&v.length===0,es=typeof v==="string"&&v.trim().length===0,nu=v===null||v===undefined,ca=(d)=>Array.isArray(d)?d.map(ca):d&&typeof d==="object"?Object.fromEntries(Object.entries(d).map(([k,v])=>[k,ca(v)])):d===null||d===undefined||(typeof d==="string"&&d.trim().length===0)?"-":d;return[k,ro&&(es||nu)?"-":ro&&ea?["-"]:Array.isArray(v)?ca(v):v]}));},[initialValues,fieldsList,fields,readOnly]),msg=getFormatMessage(),fb=[],onSubmit&&fb.push(<AntButton key="submit" type="primary" htmlType="submit" style={{minWidth:"120px",lineHeight:1}} loading={isSubmitting} disabled={isSubmitting||!!isSubmitDisabled} icon={submitButtonIcon??null}>{submitLabel||msg(generalMessages.submit)}</AntButton>),reset!==false&&!readOnly&&fb.push(<AntButton key="reset" type="default" htmlType="reset" style={{minWidth:"120px",marginInlineStart:"1rem"}} disabled={false} onClick={onReset}>{resetLabel||msg(generalMessages.clearForm)}</AntButton>),enhancedRequiredMark=(l,i)=>{cf=fields.find(f=>f.label===l),ctx={required:i.required,requiredGroup:cf?.requiredGroup};return CustomizedRequiredMark(l,ctx)};return<Card className={clsx("brdp-card brdp-form-wrapper",{"brdp-form-readonly":readOnly})} style={{border:"none",borderRadius:0,background:"none",flex:1,width:"100%"}} title={title??null} extra={formHeaderActions?.length>=1?<ActionBarBuilder actionList={formHeaderActions}/>:null} styles={{title:{fontWeight:"normal",fontSize:"var(--ant-font-size)",paddingInlineEnd:"var(--ant-font-size)"},header:{background:"none",padding:0},body:{padding:0}}}><Spin spinning={!!isLoading}><Form<F> id={id} name={id} form={form} onFinish={isSubmitDisabled?undefined:onSubmit} initialValues={initWithDash} requiredMark={enhancedRequiredMark} layout={readOnly?"horizontal":"vertical"} disabled={disabled||readOnly} scrollToFirstError size={compact?"small":undefined} colon={true}>{compact&&<style>{`.ant-form-item-label{--ant-form-label-font-size:0.75rem;--ant-form-vertical-label-padding:0 0 4px}`}</style>}<Card className="brdp-card brdp-form-fields-wrapper" actions={fb}><FormFieldsRow fields={fields} form={form} gutter={16} readOnly={readOnly}/></Card></Form></Spin></Card>}
RENDERER:FormFieldsRenderer<F>({field,form}:{field:FormField<F>,form:FormInstance})=>{msg=getFormatMessage(),calcRelResult=Form.useWatch((v)=>{if(!field.dependencies?.length)return()=>{};r:Partial<F>={},field.dependencies.forEach(k=>{Object.prototype.hasOwnProperty.call(v,k)&&(r[k]=v[k])});return r},form),relHandler=useCallback((cb)=>isFunction(cb)?cb({values:calcRelResult as Partial<F>}):cb??false,[calcRelResult]),getCommonFormItemProps=React.useCallback(f=>({name:f.name as string,htmlFor:String(f.name),label:f.label,rules:f.validation?.rules,tooltip:f.tooltip,extra:f.extra,hasFeedback:f.hasFeedback,hidden:f.hidden===undefined?undefined:relHandler(f.hidden)}),[relHandler]),renderFormItem=(p,c)=>{ben=field.type==="business"?(field.element as React.ComponentType).displayName||(field.element as React.ComponentType).name:undefined;return<Form.Item key={String(field.name)} {...getCommonFormItemProps(field)} layout={field.readOnly?"horizontal":"vertical"} {...p} className={clsx({"brdp-readonly-field":field.readOnly},{"brdp-disabled-field":field.disabled},{"brdp-business-field":field.type==="business"},{[`brdp-field--type-${field.type}`]:field.type},{[`brdp-business-${ben}`]:ben})}>{c}</Form.Item>},cip={id:String(field.name),disabled:(field.disabled||field.readOnly)===undefined?undefined:relHandler(field.disabled||field.readOnly),hidden:relHandler(field.hidden)};switch(field.type){case"business":return renderFormItem({},<RenderBusinessElement field={{...field,...cip}} id={String(field.name)} name={field.name as string} validation={field.validation} form={form}/>);case"input":{fv=form.getFieldValue(field.name),ro=Boolean(field.readOnly),sp=field.layout?.span??1,hs=Boolean(field.options?.suffix),vcs={1:15,2:45,3:80,4:110},wt=ro&&(typeof fv==="string"||typeof fv==="number")&&String(fv).length>=vcs[sp];return renderFormItem({labelAlign:"right"},<Input {...cip} addonAfter={hs||wt?<Flex align="center" justify="center" gap="small">{wt&&<Tooltip title={fv}><Button type="text" disabled={false} size="small" icon={<HorizontalEllipsisIcon/>}/></Tooltip>}{hs&&<span>{field.options?.suffix}</span>}</Flex>:null} addonBefore={field.options?.prefix} placeholder={field.options?.placeholder} dir={field?.options?.direction} className={clsx({"ellipsis-input-filed-with-tooltip":wt})}/>)}case"numeric":return renderFormItem({},<InputNumber<string> style={{width:"100%"}} {...cip} controls={false} keyboard={false} placeholder={field.options?.placeholder}/>);case"password":return renderFormItem({},<Input.Password {...cip} placeholder={field.options?.placeholder}/>);case"checkbox":return renderFormItem({layout:"horizontal",valuePropName:"checked",style:{height:"100%",display:"flex",alignItems:"center"}},<Checkbox {...cip} className="brdp-checkbox" rootClassName="brdp-checkbox-root">{field.label}</Checkbox>);case"select":return renderFormItem({},<Select {...cip} options={field.data.static} showSearch={field.options?.searchable} mode={field.options?.multiple?"multiple":field.options?.tags?"tags":undefined} maxTagCount={field.options?.maxCount} allowClear={true} loading={field.loading} placeholder={field.options?.placeholder} fieldNames={field.options?.dataMapper} notFoundContent={<Empty description={msg(generalMessages.notFound)}/>} filterOption={(i,o)=>{inp=i.toLowerCase().trim(),lbl=o?.label?.toString().toLowerCase().trim();if(lbl.includes(inp))return true;val=o?.value?.toString().toLowerCase().trim();return val.includes(inp.trim())}}/>);case"cascader":return renderFormItem({},<Cascader {...cip} options={field.data} showSearch={field.options?.searchable} multiple={field.options?.multiple} maxTagCount={field.options?.maxCount} allowClear={true} placeholder={field.options?.placeholder} loading={field.loading}/>);case"textarea":return renderFormItem({},<Input.TextArea {...cip} maxLength={field.options?.maxLength} showCount={Boolean(field.options?.maxLength)} placeholder={field.options?.placeholder}/>);case"time-picker":return renderFormItem({},<DatePicker.TimePicker {...cip} style={{width:"100%"}} placeholder={field.options?.placeholder}/>);case"range-date-picker":return renderFormItem({},<DatePicker.RangePicker {...cip} style={{width:"100%"}} placeholder={field.options?.placeholder}/>);case"radio-button":return renderFormItem({},<Radio.Group {...cip} options={field.data.static as unknown as CheckboxOptionType[]}/>);case"tree-select":return renderFormItem({},<TreeSelect treeData={field.data} allowClear multiple placeholder={field.options?.placeholder} placement="bottomLeft" showSearch treeCheckable={field.options?.treeCheckable} treeDefaultExpandAll={field.options?.expandAll} treeIcon={field.options?.showIcon} treeLine={field.options?.treeLine&&{showLeafIcon:field.options?.showLeafIcon}}/>);case"divider":return<Divider {...field.options}>{field.label}</Divider>;default:console.error(`invalid field type ${(field as{type:string}).type}`);return null}}
ROW:FormFieldsRow<F>({fields,form,gutter,readOnly,disabled,withBorder}:{fields:FormBuilderPropsType<F>["fields"],form:FormInstance<F>,gutter:RowProps["gutter"],readOnly?:boolean,disabled?:boolean,withBorder?:boolean})=>{bp=useBreakpoint(),calcBorder=(()=>{if(!withBorder||!bp)return undefined;sa=0;return(s,li)=>{sn=bp.lg?s.lg:bp.md?s.md:s.xs,sa=sa+sn;if(sa>=24||li){sa=0;return false}return true}})();return<Row gutter={gutter}>{fields.map((f,i)=>{s=calcSpan(f),hb=calcBorder?.(s,i+1===fields.length);if(f.type==="divider"){return<Col xs={{span:s.xs}} offset={0} key={String(f.name)}><FormFieldsRenderer<F> field={{readOnly,disabled,...f}} form={form}/></Col>}return<Col xs={{span:s.xs}} md={{span:s.md}} lg={{span:s.lg}} offset={(f.layout?.offset||0)*6} key={String(f.name)} className={clsx({"brdp-form-col-with-left-border":hb})}><FormFieldsRenderer<F> field={{readOnly,disabled,...f}} form={form}/></Col>})}</Row>}
UTILS:RenderBusinessElement:React.FC<BusinessElementFieldsProps&{field:FormBusinessField<never>}>=({name,id,onChange,validation,value,form,field:{element,options,...rf}})=>React.createElement(element as React.ElementType,{id,name,value,onChange,validation,form,options:{...options,...rf}});calcSpan=(f)=>({xs:24,md:(f.layout?.span||1)>=2?24:12,lg:(f.layout?.span||1)*6});CustomizedRequiredMark=(l,c)=>{irg="requiredGroup"in c&&c.requiredGroup,ir=c.required;return<>{l}{ir&&!irg?<Typography.Text strong style={{paddingInlineStart:4}} type="danger">*</Typography.Text>:null}{irg?<Typography.Text strong style={{color:"#1890ff",paddingInlineStart:4}}>*</Typography.Text>:null}</>}
TYPES:type IgnorablePattern=`__${string}`;type FormFields<F=any>=FormField<F>[];type BusinessElementsRepositoryTypes={BusinessTagDemo:typeof BusinessTagDemo,FileParserField:typeof FileParserField,DatePickerField:typeof DatePickerField,DateTimePickerField:typeof DateTimePickerField,IBANField:typeof IbanField,FileUploaderField:typeof FileUploaderField,AmountField:typeof AmountField,CollapseField:typeof CollapseField,NestDynamicField:typeof NestDynamicField,ButtonField:typeof ButtonField,DynamicListField:typeof DynamicListField,TagField:typeof TagField,CopyableField:typeof CopyableField};type FormBuilderPropsType<F,H=unknown>={title?:string,drill?:FormInstance,id:string,fields:FormField<F>[],initialValues?:Partial<F>,onSubmit?:(fields:F)=>void,reset?:boolean,submitLabel?:string,onReset?:()=>void,resetLabel?:string,compact?:boolean,isLoading?:boolean,isSubmitting?:boolean,isSubmitDisabled?:boolean,disabled?:boolean,readOnly?:boolean,formHeaderActions?:ActionBarBuilderType<H>[],submitButtonIcon?:React.ReactNode};type BaseFormField<F,N=keyof F|IgnorablePattern>={name:N,label:string,validation?:{rules:GetProps<typeof Form.Item>["rules"]},dependencies?:N[],tooltip?:string,extra?:string,hasFeedback?:boolean,layout?:{span?:1|2|3|4,offset?:0|1|2|3,endPoint?:boolean},disabled?:boolean|((options:{values:Partial<F>})=>boolean),hidden?:boolean|((options:{values:Partial<F>})=>boolean),readOnly?:boolean,requiredGroup?:string};type BusinessElementFieldsProps<E extends object=object,S extends object=object>={id:string,name:string,value?:unknown,onChange?:(value:unknown)=>void,validation?:unknown,form:FormInstance,options?:FormBusinessField<never,E,S>["options"]&Omit<FormBusinessField<never,E,S>,"element"|"options">&{disabled?:boolean,hidden?:boolean}};type FormBusinessField<F,E extends object=object,S extends object=object>=BaseFormField<F>&{type:"business",element:BusinessElementsRepositoryTypes[keyof BusinessElementsRepositoryTypes]|React.ElementType<BusinessElementFieldsProps<Partial<E>,S>>,options?:{returnFormat?:{type:"string"|"object"|"fn",template:string|object|((data:unknown)=>null|number|string|object)},staticData?:S,placeholder?:string,extraProps?:E}};type FormSelectField<F>=BaseFormField<F>&{type:"select",options?:{searchable?:boolean,multiple?:boolean,maxCount?:number,placeholder?:string,dataMapper?:{label?:string,value?:string,options?:string,groupLabel?:string},tags?:boolean},data:{static:{value:string|number|boolean,label:string,disabled?:boolean}[]}|{static:{label:string,title:string,options:{label:string,value:string|number|boolean}[]}[]},loading?:boolean};type FormCascaderField<F>=BaseFormField<F>&{type:"cascader",options?:{searchable?:boolean,multiple?:boolean,maxCount?:number,placeholder?:string},data:CascaderProps<CascaderDataNodeType>["options"],loading?:boolean};type FormInputField<F>=BaseFormField<F>&{type:"input",options?:{prefix?:string,suffix?:string,placeholder?:string,direction?:"ltr"|"rtl"}};type FormPasswordField<F>=BaseFormField<F>&{type:"password",options?:{placeholder?:string}};type FormCheckboxField<F>=BaseFormField<F>&{type:"checkbox"};type FormNumericField<F>=BaseFormField<F>&{type:"numeric",options?:{placeholder?:string}};type FormTextareaField<F>=BaseFormField<F>&{type:"textarea",options?:{maxLength?:number,placeholder?:string,direction?:"ltr"|"rtl"}};type FormTimePickerField<F>=BaseFormField<F>&{type:"time-picker",options?:{disabledDate?:(current:Date)=>boolean,minDate?:Date,maxDate?:Date,placeholder?:string}};type FormRangePickerField<F>=BaseFormField<F>&{type:"range-date-picker",options?:{disabledDate?:(current:Date)=>boolean,minDate?:Date,maxDate?:Date,placeholder?:[string,string]}};type FormRadioButtonField<F>=BaseFormField<F>&{type:"radio-button",data:{static:{value:string|number|boolean,label:string,disabled?:boolean}[]}};type FormTreeSelectField<F>=BaseFormField<F>&{type:"tree-select",options?:{placeholder?:string,treeCheckable?:boolean,showIcon?:boolean,expandAll?:boolean,treeLine?:boolean,showLeafIcon?:boolean},data:TreeSelectProps<TreeSelectDataNodeType>["treeData"]};type DividerField<F>=BaseFormField<F>&{type:"divider",options?:{orientation?:"left"|"right"|"center"}};type FormField<F>=FormBusinessField<F>|FormSelectField<F>|FormCascaderField<F>|FormInputField<F>|FormPasswordField<F>|FormCheckboxField<F>|FormNumericField<F>|FormTextareaField<F>|FormTimePickerField<F>|FormRangePickerField<F>|FormRadioButtonField<F>|FormTreeSelectField<F>|DividerField<F>
BUSINESS_ELEMENTS:{
BusinessTagDemo:({name,value,...r})=>{useEffect(()=>{r.onChange&&r.onChange(false)},[]);return<Tag color="blue" style={{width:"100%"}}><span>Business,name:{name}-{r.options?.returnFormat?.type}</span><div><pre dir="ltr">{JSON.stringify(r)}</pre></div></Tag>}
TagField:({form:_,..p})=>{m=getFormatMessage(),dv=p?.options?.extraProps?.parser!==undefined?p?.options?.extraProps?.parser(p?.value):Boolean(p?.value);return<Tag className={styles["tag-field"]} id={p?.id} color={dv?"success":"error"} bordered={false} icon={dv?<IconsList.TickIcon/>:<IconsList.CrossIcon/>}><strong>{dv?m(generalMessages.has):m(generalMessages.doesNotHave)}</strong></Tag>}
NestDynamicField:({form:_,...p})=>{m=getFormatMessage(),[cv,scv]=useState<CultureValuesType[]>((p.value as CultureValuesType[])||[{culture:undefined,value:""}]),ao=p?.options?.extraProps?.cultures,gao=(ci)=>{sc=cv.map((c,i)=>(i!==ci?c.culture:null)).filter(Boolean);return ao?.filter((o)=>!sc.includes(o.value))},acs=ao?.length===cv.filter((c)=>c.culture).length,at=()=>{!acs&&scv([...cv,{culture:undefined,value:""}])},rt=(i)=>{ncv=[...cv],ncv.splice(i,1),scv(ncv),p.onChange?.(ncv)},hc=({name,value,index})=>{ncv=[...cv];ncv[index]&&(ncv[index][name]=value,scv(ncv),p.onChange?.(ncv))};return<Flex vertical style={{width:"50%"}} gap="small"><Flex vertical gap="small">{cv.map((c,i)=><Flex gap="small" key={i}><Select allowClear direction="rtl" loading={p?.options?.extraProps?.culturesIsFetching} style={{width:"50%"}} options={gao(i)} value={c.culture} onChange={(v)=>hc({name:"culture",value:v,index:i})} placeholder={m(generalMessages.language)}/><Input name="value" value={c.value} onChange={(e)=>hc({name:e.target.name as keyof CultureValuesType,value:e.target.value,index:i})} placeholder={m(generalMessages.value)}/><MinusCircleOutlined onClick={()=>rt(i)}/></Flex>)}</Flex><Flex justify="start"><Button label={m(generalMessages.newTranslation)} icon={<PlusOutlined/>} onClick={at} disabled={acs}/></Flex></Flex>}
IbanField:({form:_,...p})=>{dv=extractDigits(p.value as string),ph=p?.options?.extraProps?.placeholder||"",ai=p?.options?.extraProps?.addIR===true?true:false,hc=(e)=>{ri=e.target.value,do=extractDigits(ri),iwi=ai&&do.length>0?"IR"+do:do,p.onChange?.({...e,target:{...e.target,value:iwi}})};return<Input disabled={p.options?.disabled as boolean} readOnly={p?.options?.readOnly} placeholder={ph} id={p?.id} name={p?.name} value={formatIban(dv)} onChange={hc} addonAfter={"IR"} dir="ltr" style={{textAlign:"left"}} maxLength={29} className={`${p.options?.readOnly?"brdp-field-iban brdp-field-iban--readonly":"brdp-field-iban"}`}/>}
FileUploaderField:({id,name,...p})=>{m=getFormatMessage(),{accept,disabled}=checkPropsExist(p.options?.extraProps),{message}=App.useApp(),[fl,sfl]=useState<UploadFile|undefined>(undefined),[e,se]=useState<string|undefined>(undefined);return<Upload.Dragger name={name} id={String(id)} disabled={disabled} accept={accept.join(",")} showUploadList={false} multiple={false} maxCount={1} beforeUpload={async(f)=>{try{checkIsValidFile(f,accept),p.onChange?.(f),sfl(f)}catch(er){er instanceof Error?(message.error(er.message),se(er.message),sfl(undefined)):console.error(er)}return false}} onDrop={(e)=>{fs=Array.from(e.dataTransfer.files),f=fs[0];try{checkIsValidFile(f,accept)}catch(er){er instanceof Error?message.error(er.message):console.error(er)}}} className={[classes.fileParserWrapper,...(e?[classes.errorBorder]:[]),...(fl?[classes.nonePointer]:[])].join(" ")}>{fl?<Flex gap="0.25rem" justify="center" align="stretch" wrap><p className="ant-upload-text" style={{paddingTop:"6px"}}>{fl.name}</p><span className={classes.separator}/><Button icon={<DeleteOutlined/>} color="danger" variant="outlined" htmlType="button" style={{pointerEvents:"auto"}} onClick={(e)=>{e.stopPropagation(),sfl(undefined)}}/></Flex>:<Flex gap="0.75rem" justify="center" align="center" wrap><p className="ant-upload-drag-icon" style={{paddingLeft:"20px"}}><CloudUploadOutlined/></p><p className="ant-upload-text">{m(generalMessages.dropFileHere)}</p><p className="ant-upload-text" style={{minWidth:"50px"}}>{m(generalMessages.or)}</p><Button htmlType="button" disabled={disabled}>{m(generalMessages.doChoose)}</Button></Flex>}</Upload.Dragger>}
FileParserField:({id,name,...p})=>{m=getFormatMessage(),{accept,disabled,parser,sizeLimit,sizeLimitValidationMessage}=checkPropsExist(p.options?.extraProps),{message}=App.useApp(),[fl,sfl]=useState<UploadFile|undefined>(undefined),[e,se]=useState<string|undefined>(undefined);es:CSSProperties=e?{borderColor:"red"}:{};ps:CSSProperties=fl?{pointerEvents:"none",borderColor:"#d9d9d9"}:{};return<Upload.Dragger name={name} id={String(id)} disabled={disabled} accept={accept.join(",")} showUploadList={false} multiple={false} maxCount={1} beforeUpload={async(f)=>{try{checkIsValidFile(f,accept);sizeLimit&&checkSizeLimit({file:f,sizeLimit,sizeLimitValidationMessage});if(!parser){p.onChange?.(f)}else{let r:unknown;if(parser==="json"){r=await parseJsonFile(f)}else if(parser==="byteArray"){ba=await convertToByteArray(f);pts=f.name.split(".");fe=pts.pop();fn=pts.join(".");r={file:ba,fileName:fn,fileExtension:fe}}p.onChange?.(r)}sfl(f)}catch(er){er instanceof Error?(message.error(er.message),se(er.message),sfl(undefined)):console.error(er)}finally{return false}}} onDrop={(e)=>{fs=Array.from(e.dataTransfer.files),f=fs[0];try{checkIsValidFile(f,accept)}catch(er){er instanceof Error?message.error(er.message):console.error(er)}}} style={{...es,...ps}} className={classes.fileParserWrapper}>{fl?<Flex gap="0.25rem" justify="center" align="stretch" wrap><p className="ant-upload-text" style={{paddingTop:"6px"}}>{fl.name}</p><span className={classes.separator}/><Button icon={<DeleteOutlined/>} color="danger" variant="outlined" htmlType="button" style={{pointerEvents:"auto"}} onClick={(e)=>{e.stopPropagation(),sfl(undefined)}}/></Flex>:<Flex gap="0.75rem" justify="center" align="center" wrap><p className="ant-upload-drag-icon" style={{paddingLeft:"20px"}}><CloudUploadOutlined/></p><p className="ant-upload-text">{m(generalMessages.dropFileHere)}</p><p className="ant-upload-text" style={{minWidth:"50px"}}>{m(generalMessages.or)}</p><Button htmlType="button" disabled={disabled}>{m(generalMessages.doChoose)}</Button></Flex>}</Upload.Dragger>}
DatePickerField:({form,name,options,value:vt,onChange})=>{m=getFormatMessage(),pv=isString(vt)?parseJalaliString(vt):vt,v=isDayjs(pv)?pv:null,hoc=(nv)=>{isString(options?.returnFormat?.template)&&options?.returnFormat.type==="string"&&nv?onChange?.(nv?.format(options?.returnFormat.template)):onChange?.(nv)},useEffect(()=>{v&&hoc(v)},[]),hdc=(sd)=>{!sd?hoc(null):hoc(sd)},mdwr=Form.useWatch([options?.extraProps?.minDate],form),mxdwr=Form.useWatch([options?.extraProps?.maxDate],form),mdwv=isString(mdwr)?parseJalaliString(mdwr):mdwr?.isJalali()?mdwr:undefined,mxdwv=isString(mxdwr)?parseJalaliString(mxdwr):mxdwr?.isJalali()?mxdwr:undefined;return<DatePicker minDate={mdwv} maxDate={mxdwv} readOnly={options?.readOnly} disabled={options?.disabled as boolean} hidden={options?.hidden as boolean} style={{width:"100%"}} name={`${name}-datepicker`} value={v} onChange={hdc} format={isString(options?.extraProps?.displayFormat)?options?.extraProps?.displayFormat:"YYYY/MM/DD"} placeholder={options?.placeholder} locale={{...faIR,lang:{...faIR.lang,ok:m(generalMessages.confirm)}}}/>}
DateTimePickerField:({form,id,name,options,value:vt,onChange})=>{m=getFormatMessage(),pv=isString(vt)?parseJalaliString(vt):vt,v=isDayjs(pv)?pv:null,hoc=(nv)=>{isString(options?.returnFormat?.template)&&options?.returnFormat.type==="string"&&nv?onChange?.(nv.format(options?.returnFormat.template)):onChange?.(nv)},useEffect(()=>{v&&hoc(v)},[]),stn=Boolean(options?.extraProps?.setTimeToNow),ste=Boolean(options?.extraProps?.setTimeToEnd),ndc=Boolean(options?.extraProps?.needDateConfirm),ntc=Boolean(
