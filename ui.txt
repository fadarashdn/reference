var t={typography:{css:":global(h2.ant-typography).page-title{font-size:16px;font-weight:700}",tsx:'import{Typography as a}from"antd";import s from"./typography.module.css";export interface o{text:string|React.ReactNode;type?:"text"|"paragraph"|"title"|"subTitle";style?:"disabled"|"mark"|"code"|"keyboard"|"underline"|"delete"|"strong"|"italic"}const{Title:T,Paragraph:P,Text:x}=a;const y=({text:t,type:e="text",style:r})=>{const i={disabled:r==="disabled",mark:r==="mark",code:r==="code",keyboard:r==="keyboard",underline:r==="underline",delete:r==="delete",strong:r==="strong",italic:r==="italic"};return e==="paragraph"?<P {...i}>{t}</P>:e==="title"?<T level={2} className={s.pageTitle}>{t}</T>:e==="subTitle"?<T level={4} type="secondary">{t}</T>:<x {...i}>{t}</x>};export default y'},tag:{tsx:'import{Tag as a}from"antd";import{clsx as s}from"clsx";const t=({className:e,children:r,...i})=>(
<a {...i} className={s(e,"brdp-tag")}>{r}</a>);export default t'},tabs:{tsx:'import{Tabs as a}from"antd";import{SizeType as s}from"antd/es/config-provider/SizeContext";import{TabsType as t}from"antd/es/tabs";import"./tabs-styles.css";type p={items:{label:string;key:string;children:React.ReactNode;icon?:React.ReactNode}[];type?:t;defaultActiveKey?:string;activeKey?:string;onChange?:(key:string)=>void;size?:s;destroyInactiveTabPane?:boolean};const b=({items:e,type:r,defaultActiveKey:i,activeKey:n,onChange:c,size:o,destroyInactiveTabPane:d})=>(
<div className="tabs-wrapper"><a destroyInactiveTabPane={d} defaultActiveKey={i} activeKey={n} onChange={c} type={r} size={o} items={e}/></div>);export default b',css:".tabs-wrapper{background:var(--ant-color-bg-base)}.tabs-wrapper .ant-card .ant-card{border:none!important}.tabs-wrapper form{width:100%}.ant-tabs-nav-wrap{background:var(--ant-layout-color-bg-body)}.radio-in-tabs{padding-inline-start:var(--ant-padding-lg);padding-top:var(--ant-padding-sm)}.tabs-wrapper .ant-tabs .ant-tabs-nav .ant-tabs-tab .ant-tabs-tab-icon{margin-inline-end:var(--ant-padding-xs)}.tabs-wrapper .ant-tabs-tab:not(.ant-tabs-tab-active){background:var(--ant-color-fill-secondary)!important}.tabs-wrapper .ant-tabs-tab-active,.tabs-wrapper .ant-tabs-tab{border:none!important}"},steps:{tsx:'import{Steps as a}from"antd";const{Step:s}=a;type t={current:number;steps:{title:string;description?:string;icon?:React.ReactNode;content:React.ReactNode;disabled?:boolean}[]};const e=({current:r,steps:t})=>(
<><a current={r} style={{marginBottom:16}}>{t.map((e,i)=>(<s key={i} title={e.title} description={e?.description} icon={e?.icon}/>))}</a><div>{t[r]?.content}</div></>);export default e'},spin:{tsx:'import{Spin as a}from"antd";type t={caption?:string};const e=({caption:r})=>(
<a tip={r??undefined}>{r&&<div style={{padding:50,borderRadius:4,background:"var(--ant-color-primary)",opacity:.06}}/>}</a>);export default e'},icons:{tsx:'import{generalMessages as e,getFormatMessage as r}from"@brdp/utils";import{Alert:a,Flex:s,Input:t,notification as i}from"antd";import{useState as n}from"react";import c from"../content/content";import p from"../typography/typography";import"./icons-style.css";import{IconsList as o}from"..";type l={title:string;iconElement:React.FC};const f=Object.entries(o).map(([e,r])=>({title:e,iconElement:r}));const u=()=>{const[e,o]=n(f),[l,u]=n(!1),m=r(),d=async e=>{try{await navigator.clipboard.writeText(e),i.success({message:"Coppied!",key:"copied"})}catch(r){i.error({description:"Not coppied!",key:"not-copied",message:"insecure origin"})}},h=e=>{const r=e.target.value;if(!r){o(f)}const i=f.filter(e=>e.title?.toLowerCase()?.includes(r?.toLowerCase()));o(i),u(i.length>0?!1:!0)};return(
<c title="آیکون‌ها"><t onChange={h} placeholder="جستجو کنید..." suffix={<o.SearchIcon/>} style={{width:"250px",marginBottom:"24px"}}/>{l&&<a banner type="warning" message={m(e.notFound)}/>}<s align="center" gap={20} wrap="wrap" style={{width:"100%"}}>{f.map(e=>(
<s key={e.title} vertical align="center" onClick={()=>d(e.title)} className="colStyle"><e.iconElement/><p text={e.title}/></s>))}</s></c>)};export default u',css:".colStyle{font-size:24px!important;gap:24;border-radius:8;padding:38;cursor:pointer;width:18%;height:150px}.colStyle:hover{background-color:white}"},iconFactory:{tsx:'import a from"@ant-design/icons";type t={width?:number;height?:number};const e=({SVG:r})=>(<a component={()=><r/>}/>);export default e;export type{t}'}};
